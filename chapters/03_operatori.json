{
  "id": "operatori",
  "title": "Operatori: Eseguire Calcoli e Confronti",
  "explanation": "<h2>Operatori: Gli Strumenti per Manipolare i Dati</h2>\n<p>Gli operatori sono simboli speciali che eseguono operazioni su valori (chiamati operandi). Abbiamo già visto l'operatore di assegnamento <code>=</code>. Ora vediamo i più comuni.</p>\n\n<h2>Operatori Aritmetici: Fare i Conti</h2>\n<p>Questi eseguono le classiche operazioni matematiche:</p>\n<ul>\n    <li><code>+</code> : Addizione (<code>10 + 5</code> risulta <code>15</code>)</li>\n    <li><code>-</code> : Sottrazione (<code>10 - 5</code> risulta <code>5</code>)</li>\n    <li><code>*</code> : Moltiplicazione (<code>10 * 5</code> risulta <code>50</code>)</li>\n    <li><code>/</code> : Divisione (restituisce sempre un <code>float</code>) (<code>10 / 5</code> risulta <code>2.0</code>; <code>10 / 4</code> risulta <code>2.5</code>)</li>\n    <li><code>//</code> : Divisione Intera (tronca il risultato all'intero inferiore) (<code>10 // 5</code> risulta <code>2</code>; <code>10 // 4</code> risulta <code>2</code>; <code>11 // 4</code> risulta <code>2</code>)</li>\n    <li><code>%</code> : Modulo (restituisce il resto della divisione intera) (<code>10 % 5</code> risulta <code>0</code>; <code>10 % 4</code> risulta <code>2</code>; <code>11 % 4</code> risulta <code>3</code>). Utile per verificare se un numero è pari (<code>numero % 2 == 0</code>) o dispari.</li>\n    <li><code>**</code> : Esponenziazione (elevamento a potenza) (<code>10 ** 2</code> risulta <code>100</code>; <code>2 ** 3</code> risulta <code>8</code>)</li>\n</ul>\n<pre><code class=\"language-python\">base = 10\naltezza = 5\narea_rettangolo = base * altezza\nprint(f\"Area: {area_rettangolo}\")\n\ndividendo = 17\ndivisore = 5\nquoziente = dividendo // divisore\nresto = dividendo % divisore\nprint(f\"{dividendo} diviso {divisore} fa {quoziente} con resto {resto}\")</code></pre>\n<p><strong>Ordine di Precedenza:</strong> Python segue le regole matematiche standard (PEMDAS/BODMAS): Parentesi, Esponenziazione, Moltiplicazione/Divisione (da sinistra a destra), Addizione/Sottrazione (da sinistra a destra).</p>\n<pre><code class=\"language-python\">risultato = 5 + 2 * 3 # La moltiplicazione viene prima: 5 + 6\nprint(risultato) # Output: 11\n\nrisultato_con_parentesi = (5 + 2) * 3 # Le parentesi vengono prima: 7 * 3\nprint(risultato_con_parentesi) # Output: 21</code></pre>\n\n<h2>Operatori di Confronto: Verificare Relazioni</h2>\n<p>Questi operatori confrontano due valori e restituiscono un valore booleano (<code>True</code> o <code>False</code>). Sono fondamentali per le istruzioni condizionali (<code>if</code>).</p>\n<ul>\n    <li><code>==</code> : Uguale a (<code>5 == 5</code> è <code>True</code>; <code>5 == 3</code> è <code>False</code>). <strong>Attenzione:</strong> non confondere con l'assegnamento <code>=</code>!</li>\n    <li><code>!=</code> : Diverso da (<code>5 != 3</code> è <code>True</code>; <code>5 != 5</code> è <code>False</code>)</li>\n    <li><code>></code> : Maggiore di (<code>5 > 3</code> è <code>True</code>)</li>\n    <li><code><</code> : Minore di (<code>5 < 3</code> è <code>False</code>)</li>\n    <li><code>>=</code> : Maggiore o uguale a (<code>5 >= 5</code> è <code>True</code>; <code>5 >= 3</code> è <code>True</code>)</li>\n    <li><code><=</code> : Minore o uguale a (<code>5 <= 5</code> è <code>True</code>; <code>3 <= 5</code> è <code>True</code>)</li>\n</ul>\n<pre><code class=\"language-python\">eta_maggiore_eta = 18\neta_utente = 20\npuo_votare = eta_utente >= eta_maggiore_eta\nprint(f\"L'utente può votare? {puo_votare}\") # Output: L'utente può votare? True\n\npassword_inserita = \"12345\"\npassword_corretta = \"segreta\"\npassword_valida = password_inserita == password_corretta\nprint(f\"Password corretta? {password_valida}\") # Output: Password corretta? False</code></pre>\n\n<h2>Operatori Logici: Combinare Condizioni Booleane</h2>\n<p>Questi operatori lavorano su valori booleani (<code>True</code>/<code>False</code>) o su espressioni che restituiscono booleani, permettendo di creare condizioni più complesse.</p>\n<ul>\n    <li><code>and</code> : Restituisce <code>True</code> se <strong>entrambi</strong> gli operandi sono veri.\n        <pre><code class=\"language-python\">True and True   # Risultato: True\nTrue and False  # Risultato: False\nFalse and True  # Risultato: False\nFalse and False # Risultato: False</code></pre>\n    </li>\n    <li><code>or</code> : Restituisce <code>True</code> se <strong>almeno uno</strong> degli operandi è vero.\n        <pre><code class=\"language-python\">True or True    # Risultato: True\nTrue or False   # Risultato: True\nFalse or True   # Risultato: True\nFalse or False  # Risultato: False</code></pre>\n    </li>\n    <li><code>not</code> : Inverte il valore booleano dell'operando.\n        <pre><code class=\"language-python\">not True  # Risultato: False\nnot False # Risultato: True</code></pre>\n    </li>\n</ul>\n<p><strong>Esempio Combinato:</strong> Verificare se un utente è adulto E ha un account attivo.</p>\n<pre><code class=\"language-python\">eta = 25\naccount_attivo = True\n\naccesso_consentito = (eta >= 18) and account_attivo\nprint(f\"Accesso consentito? {accesso_consentito}\") # Output: Accesso consentito? True\n\neta_bambino = 10\naccesso_consentito_bambino = (eta_bambino >= 18) and account_attivo\nprint(f\"Accesso consentito al bambino? {accesso_consentito_bambino}\") # Output: Accesso consentito al bambino? False</code></pre>\n<p><strong>Corto Circuito (Short-circuiting):</strong> Gli operatori <code>and</code> e <code>or</code> sono \"pigri\".</p>\n<ul>\n    <li>Con <code>and</code>, se il primo operando è <code>False</code>, Python sa già che il risultato sarà <code>False</code> e non valuta nemmeno il secondo operando.</li>\n    <li>Con <code>or</code>, se il primo operando è <code>True</code>, Python sa già che il risultato sarà <code>True</code> e non valuta il secondo operando.</li>\n</ul>\n<p>Questo può essere utile per evitare errori, ad esempio controllando se un divisore è diverso da zero prima di eseguire la divisione:</p>\n<pre><code class=\"language-python\">numero = 10\ndivisore = 0\n# Senza corto circuito, divisore != 0 and numero / divisore > 5 darebbe ZeroDivisionError\n# Con il corto circuito:\nif divisore != 0 and numero / divisore > 5:\n     print(\"Il risultato è maggiore di 5\")\nelse:\n     print(\"Il divisore è zero o il risultato non è maggiore di 5\")\n# Output: Il divisore è zero o il risultato non è maggiore di 5 (nessun errore!)</code></pre>\n\n<h2>Operatori di Assegnamento Composti</h2>\n<p>Sono scorciatoie per aggiornare il valore di una variabile usando un operatore aritmetico.</p>\n<ul>\n    <li><code>+=</code> (es. <code>x += 1</code> è uguale a <code>x = x + 1</code>)</li>\n    <li><code>-=</code> (es. <code>x -= 2</code> è uguale a <code>x = x - 2</code>)</li>\n    <li><code>*=</code> (es. <code>x *= 3</code> è uguale a <code>x = x * 3</code>)</li>\n    <li><code>/=</code> (es. <code>x /= 4</code> è uguale a <code>x = x / 4</code>)</li>\n    <li><code>//=</code>, <code>%=</code>, <code>**=</code> funzionano allo stesso modo.</li>\n</ul>\n<pre><code class=\"language-python\">contatore = 0\ncontatore += 1 # Incrementa di 1\nprint(contatore) # Output: 1\n\npunteggio = 100\npunteggio -= 10 # Decrementa di 10\nprint(punteggio) # Output: 90</code></pre>\n<p>Questi operatori rendono il codice più conciso quando aggiorni una variabile basandoti sul suo valore attuale.</p>",
  "exercise": "<p>1. Definisci due variabili numeriche, <code>a = 15</code> e <code>b = 4</code>.</p>\n<p>2. Calcola e stampa la somma, la differenza, il prodotto e la divisione (<code>/</code>) tra <code>a</code> e <code>b</code>.</p>\n<p>3. Calcola e stampa il risultato della divisione intera (<code>//</code>) e il resto (<code>%</code>) di <code>a</code> diviso <code>b</code>.</p>\n<p>4. Verifica (e stampa il risultato <code>True</code>/<code>False</code>) se <code>a</code> è maggiore di <code>b</code>.</p>\n<p>5. Verifica (e stampa il risultato) se <code>a</code> è un numero pari (usa l'operatore modulo <code>%</code>).</p>\n<p>6. Definisci una variabile <code>punti = 50</code>. Usa l'operatore di assegnamento composto <code>+=</code> per aggiungere 25 punti e poi stampa il nuovo valore di <code>punti</code>.</p>"
}
